// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.296
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace TeamReview.Specs {
	[System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
	[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	[NUnit.Framework.TestFixtureAttribute()]
	[NUnit.Framework.DescriptionAttribute("Register and login")]
	public partial class RegisterAndLoginFeature {
		private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "RegisterAndLogin.feature"
#line hidden

		[NUnit.Framework.TestFixtureSetUpAttribute()]
		public virtual void FeatureSetup() {
			testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
			var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"),
			                                                    "Register and login",
			                                                    "In order to create a review\r\nAs a user\r\nI want to register an account",
			                                                    ProgrammingLanguage.CSharp, ((string[]) (null)));
			testRunner.OnFeatureStart(featureInfo);
		}

		[NUnit.Framework.TestFixtureTearDownAttribute()]
		public virtual void FeatureTearDown() {
			testRunner.OnFeatureEnd();
			testRunner = null;
		}

		[NUnit.Framework.SetUpAttribute()]
		public virtual void TestInitialize() {
		}

		[NUnit.Framework.TearDownAttribute()]
		public virtual void ScenarioTearDown() {
			testRunner.OnScenarioEnd();
		}

		public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo) {
			testRunner.OnScenarioStart(scenarioInfo);
		}

		public virtual void ScenarioCleanup() {
			testRunner.CollectScenarioErrors();
		}

		[NUnit.Framework.TestAttribute()]
		[NUnit.Framework.DescriptionAttribute("Register using Google account")]
		public virtual void RegisterUsingGoogleAccount() {
			var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Register using Google account", ((string[]) (null)));
#line 6
			this.ScenarioSetup(scenarioInfo);
#line 7
			testRunner.Given("I own a Google account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 8
			testRunner.And("I am not logged into TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 9
			testRunner.When("I to register a new account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 10
			testRunner.And("I register using my Google account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 11
			testRunner.Then("a new account was created with my Google address", ((string) (null)),
			                ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 12
			testRunner.And("I am logged in", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 13
			testRunner.And("I am on the \"Dashboard\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
			this.ScenarioCleanup();
		}

		[NUnit.Framework.TestAttribute()]
		[NUnit.Framework.DescriptionAttribute("Login as existing user using Google account")]
		public virtual void LoginAsExistingUserUsingGoogleAccount() {
			var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login as existing user using Google account",
			                                                      ((string[]) (null)));
#line 15
			this.ScenarioSetup(scenarioInfo);
#line 16
			testRunner.Given("I have an account at TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 17
			testRunner.And("I am not logged into TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 18
			testRunner.When("I log in using my Google account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 19
			testRunner.Then("I am logged in", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 20
			testRunner.And("I am on the \"Dashboard\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
			this.ScenarioCleanup();
		}

		[NUnit.Framework.TestAttribute()]
		[NUnit.Framework.DescriptionAttribute("Login as non-existing user using Google account")]
		public virtual void LoginAsNon_ExistingUserUsingGoogleAccount() {
			var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login as non-existing user using Google account",
			                                                      ((string[]) (null)));
#line 22
			this.ScenarioSetup(scenarioInfo);
#line 23
			testRunner.Given("I own a Google account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 24
			testRunner.And("I don\'t have an account at TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
			               "And ");
#line 25
			testRunner.When("I log in using my Google account", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 26
			testRunner.Then("a new account was created with my Google address", ((string) (null)),
			                ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 27
			testRunner.And("I am logged in", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line 28
			testRunner.And("I am on the \"Dashboard\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
			this.ScenarioCleanup();
		}

		[NUnit.Framework.TestAttribute()]
		[NUnit.Framework.DescriptionAttribute("Log out of TeamReview")]
		public virtual void LogOutOfTeamReview() {
			var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Log out of TeamReview", ((string[]) (null)));
#line 30
			this.ScenarioSetup(scenarioInfo);
#line 31
			testRunner.Given("I am logged into TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 32
			testRunner.When("I log out", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 33
			testRunner.Then("I am logged out of TeamReview", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 34
			testRunner.And("I am on the login page", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
			this.ScenarioCleanup();
		}
	}
}

#pragma warning restore

#endregion