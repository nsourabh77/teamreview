@model IEnumerable<TeamReview.Web.ViewModels.ReviewViewModel>

@{
    ViewBag.Title = "Index";
}

@if (TempData["Message"] != null) { 
    <p>@TempData["Message"]</p>
}

<h1 class="db10">My TeamReview Dashboard</h1>
<a class="db11" href="@Url.Action("Create", "Review")"><i class="db12"></i>Create Review</a>

<h2 class="db13">Your Reviews</h2>
<table class="table-bordered table">
    <thead>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Name)
            </td>
            <td>Status</td>
        </tr>
    </thead>
@foreach (var item in Model) {
    var rowId = "ReviewId_" + item.ReviewId;
    <tr id="@rowId">
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @switch (item.ActionStatus) 
            {
                case TeamReview.Web.ViewModels.ActionStatus.NotStarted:
                    @Html.ActionLink("Start review", "StartReview", new { id = item.ReviewId })
                    break;
                case TeamReview.Web.ViewModels.ActionStatus.ProvideReview:
                    @Html.ActionLink("Provide review", "Provide", new { id = item.ReviewId }) 
                    break;
                case TeamReview.Web.ViewModels.ActionStatus.WaitForReviews:
                    <p>Waiting for reviews</p>
                    break;
                case TeamReview.Web.ViewModels.ActionStatus.ShowResults:
                    @Html.ActionLink("Show results", "Results", new { id = item.ReviewId })
                    break;
                default:
                    break;
            }
             | @Html.ActionLink("Edit review", "Edit", new { id = item.ReviewId })
            @* | @Html.ActionLink("Details", "Details", new { id = item.ReviewId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ReviewId })*@
        </td>
    </tr>
}

</table>
