@model TeamReview.Web.ViewModels.ReviewEditModel

@{
    ViewBag.Title = "Edit review: " + Model.Name;
}

@if (TempData["Message"] != null) { 
    <p>@TempData["Message"]</p>
}

<h2>@ViewBag.Title</h2>

@*@{ Html.RenderPartial("CreateOrEdit"); }*@

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Create a new Review</legend>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div id="categories">
            @if (Model.ExistingCategories != null && Model.ExistingCategories.Any())
            {
                <h3>Existing categories</h3>
                <ul>
                @foreach (var category in Model.ExistingCategories)
                {
                    <li>
                        <span>@category.Name:</span>
                        <span>@category.Description</span>
                    </li>
                }
                </ul>
            }
            @if (Model.AddedCategories != null)
            {
                for (var i = 0; i < Model.AddedCategories.Count(); i++)
                {
                    Html.RenderPartial("AddCategory", Model.AddedCategories[i], new ViewDataDictionary
                    {
                        TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "AddedCategories[" + i + "]" }
                    });
                }
            }
        </div>

        <div id="peers">
            @if (Model.AddedPeers != null)
            {
                for (var i = 0; i < Model.AddedPeers.Count(); i++)
                {
                    Html.RenderPartial("AddPeer", Model.AddedPeers[i], new ViewDataDictionary
                    {
                        TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "AddedPeers[" + i + "]" }
                    });
                }
            }
        </div>
        <button type="submit" name="reviewAction" value="AddCategory" id="AddCategory">Add Category</button>
        <button type="submit" name="reviewAction" value="AddPeer" id="AddPeer">Add Peer</button>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
